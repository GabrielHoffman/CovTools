out5
rm(list=ls())
library(CovTools)
data = mvtnorm::rmvnorm(100, sigma=diag(10))
out1 = CovEst(data, method="Bickel08")
out5 = CovEst(data, method="Qi06")
out5
CovEst(data, method="Qi06")
library(CovTools)
out5 = CovEst(data, method="Qi06")
names(out5)
graphics.off()
par(mfrow=c(2,3))
image(diag(10),main="Original Covariance")
image(out1$S, main="Bickel08")
image(out2$S, main="Cai11")
out1 = CovEst(data, method="Bickel08")
out2 = CovEst(data, method="Cai11")
out3 = CovEst(data, method="Donoho95")
out4 = CovEst(data, method="Fan13")
out5 = CovEst(data, method="Qi06")
## Visualize
par(mfrow=c(2,3))
image(diag(10),main="Original Covariance")
image(out1$S, main="Bickel08")
image(out2$S, main="Cai11")
image(out3$S, main="Donoho95")
image(out4$S, main="Fan13")
image(out5$S, main="Qi06")
?flipud
image(pracma::flipud(diag(10)),main="Original Covariance")
library(CovTools)
par(mfrow=c(2,3))
image(pracma::flipud(diag(10)),main="Original Covariance")
image(pracma::flipud(out1$S), main="Bickel08")
image(pracma::flipud(out2$S), main="Cai11")
image(pracma::flipud(out3$S), main="Donoho95")
image(pracma::flipud(out4$S), main="Fan13")
image(pracma::flipud(out5$S), main="Qi06")
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
X = matrix(rnorm(100*100),nrow=100)
S = cov(X)
C = solve(S)
library(CovTools)
library(CovTools)
seq(from=0.01,to=2.0,length.out=10)
library(CovTools)
?which.min
library(CovTools)
X = matrix(rnorm(100*10),nrow=100)
out = PreEst.auto(X, method="Yuan07")
library(CovTools)
out = PreEst.auto(X, method="Yuan07")
out
library(CovTools)
out = PreEst.auto(X, method="Yuan07")
out$C
image(out$C)
out$BIC
out = PreEst.auto(X, method="Yuan07", opt=list(seq(from=0.1,to=5,length.out=20)))
out = PreEst.auto(X, method="Yuan07", opt=list(plgrid=seq(from=0.1,to=5,length.out=20)))
library(CovTools)
out = PreEst.auto(X, method="Yuan07", opt=list(plgrid=seq(from=0.1,to=5,length.out=20)))
out$BIC
image(out$C)
rownames(out$BIC) = NULL
out$BIC
library(CovTools)
out = PreEst.auto(X, method="Yuan07", opt=list(plgrid=seq(from=0.1,to=5,length.out=20)))
out$BIC
out = PreEst.auto(X, method="Yuan07", opt=list(plgrid=seq(from=0.1,to=50,length.out=20)))
out$BIC
image(out$C)
library(CovTools)
?outer
X = matrix(rnorm(24),nrow=6)
n = nrow(X)
S = cov(X); diagS = (diag(S)); SS = outer(diagS,diagS);
maxSS = max(SS);
SS
maxSS
?qt
qt(0.5,df=n-2)
qt(0.975,nf=2)
qt(0.975,df=2)
qt(0.975,df=10000)
qnorm(0.975)
0.95/2+0.5
n = nrow(X)
S = cov(X); diagS = (diag(S)); SS = outer(diagS,diagS);
maxSS = max(SS);
tval  = qt(0.5+(confidence/2),df=(n-2))
rho   = tval*maxSS/sqrt(n-2+(tval^2))
confidence=0.95
n = nrow(X)
S = cov(X); diagS = (diag(S)); SS = outer(diagS,diagS);
maxSS = max(SS);
tval  = qt(0.5+(confidence/2),df=(n-2))
rho   = tval*maxSS/sqrt(n-2+(tval^2))
rho
library(CovTools)
out2 = PreEst.auto(X, method="Banerjee08")
out2$C
image(out2$C)
library(CovTools)
?logpi
?determinant
library(CovTools)
out3 = PreEst.auto(X, method="Lee17")
library(CovTools)
out3 = PreEst.auto(X, method="Lee17")
library(CovTools)
out3 = PreEst.auto(X, method="Lee17")
library(CovTools)
out3 = PreEst.auto(X, method="Lee17")
out3
y = "a"
y %in% c("a","b")
library(CovTools)
out4 = PreEst.auto(X, method="Banerjee14")
library(CovTools)
library(CovTools)
out4 = PreEst.auto(X, method="Banerjee14")
out4
out4 = PreEst.auto(X, method="Banerjee14", opt=list(Banerjee14.loss="Squared"))
library(CovTools)
out4 = PreEst.auto(X, method="Banerjee14", opt=list(Banerjee14.loss="Squared"))
library(CovTools)
out4 = PreEst.auto(X, method="Banerjee14", opt=list(Banerjee14.loss="Squared"))
out4
library(CovTools)
library(CovTools)
?CovEst
?CovEst.auto
library(CovTools)
?CovEst
?prcomp
?cov
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
## generate data from multivariate normal with Identity covariance.
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run automatic estimation
out1 = CovEst.auto(data, method="Bickel08")
out2 = CovEst.auto(data, method="Cai11")
out3 = CovEst.auto(data, method="Donoho95")
out4 = CovEst.auto(data, method="Fan13")
out5 = CovEst.auto(data, method="Qi06")
## Visualize
par(mfrow=c(2,3))
image(pracma::flipud(diag(10)),main="Original Covariance")
image(pracma::flipud(out1$S), main="Bickel08")
image(pracma::flipud(out2$S), main="Cai11")
image(pracma::flipud(out3$S), main="Donoho95")
image(pracma::flipud(out4$S), main="Fan13")
image(pracma::flipud(out5$S), main="Qi06")
library(CovTools)
remove.packages("CovTools", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
library(CovTools)
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run estimation
out1 = CovEst(data, method="Bickel08")
out2 = CovEst(data, method="Cai11")
out3 = CovEst(data, method="Donoho95")
out4 = CovEst(data, method="Fan13")
out5 = CovEst(data, method="Qi06")
## Visualize
par(mfrow=c(2,3))
image(pracma::flipud(diag(10)),main="Original Covariance")
image(pracma::flipud(out1$S), main="Bickel08")
image(pracma::flipud(out2$S), main="Cai11")
image(pracma::flipud(out3$S), main="Donoho95")
image(pracma::flipud(out4$S), main="Fan13")
image(pracma::flipud(out5$S), main="Qi06")
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run automatic estimation
out1 = CovEst.auto(data, method="Bickel08")
out2 = CovEst.auto(data, method="Cai11")
out3 = CovEst.auto(data, method="Donoho95")
out4 = CovEst.auto(data, method="Fan13")
out5 = CovEst.auto(data, method="Qi06")
## Visualize
par(mfrow=c(2,3))
image(pracma::flipud(diag(10)),main="Original Covariance")
image(pracma::flipud(out1$S), main="Bickel08")
image(pracma::flipud(out2$S), main="Cai11")
image(pracma::flipud(out3$S), main="Donoho95")
image(pracma::flipud(out4$S), main="Fan13")
image(pracma::flipud(out5$S), main="Qi06")
install.packages("partitions")
?partitions
??partitions
?randcmatrix
??setparts
install.packages("RSpectra")
remove.packages("CovTools", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
library(CovTools)
ls("package:Rdimtools")
ls("package:CovTools")
library(CovTools)
?CovEst
?CovEst.auto
library(CovTools)
?CovEst.auto
?CovEst
?CovEst.auto
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run automatic estimation
out1 = CovEst.auto(data, method="Bickel08")
out2 = CovEst.auto(data, method="Cai11")
out3 = CovEst.auto(data, method="Donoho95")
out4 = CovEst.auto(data, method="Fan13")
out5 = CovEst.auto(data, method="Qi06")
## Visualize
par(mfrow=c(2,3))
image(pracma::flipud(diag(10)),main="Original Covariance")
image(pracma::flipud(out1$S), main="Bickel08")
image(pracma::flipud(out2$S), main="Cai11")
image(pracma::flipud(out3$S), main="Donoho95")
image(pracma::flipud(out4$S), main="Fan13")
image(pracma::flipud(out5$S), main="Qi06")
library(CovTools)
?CovEst.auto
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run estimation
out1 = PreEst.auto(data, method="Banerjee06")
out2 = PreEst.auto(data, method="Banerjee14")
out3 = PreEst.auto(data, method="Lee14")
out4 = PreEst.auto(data, method="Yuan07")
## Visualize
par(mfrow=c(2,2))
image(pracma::flipud(out1$C), main="Banerjee06")
image(pracma::flipud(out2$C), main="Banerjee14")
image(pracma::flipud(out3$C), main="Lee14")
image(pracma::flipud(out4$C), main="Yuan07")
out3 = PreEst.auto(data, method="Lee17")
out4 = PreEst.auto(data, method="Yuan07")
library(CovTools)
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run estimation
out1 = PreEst.auto(data, method="Banerjee06")
out2 = PreEst.auto(data, method="Banerjee14")
out3 = PreEst.auto(data, method="Lee17")
out4 = PreEst.auto(data, method="Yuan07")
## Visualize
par(mfrow=c(2,2))
image(pracma::flipud(out1$C), main="Banerjee06")
image(pracma::flipud(out2$C), main="Banerjee14")
image(pracma::flipud(out3$C), main="Lee14")
image(pracma::flipud(out4$C), main="Yuan07")
library(CovTools)
## generate data from multivariate normal with Identity precision.
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run estimation
out1 = PreEst.auto(data, method="Banerjee06")
out2 = PreEst.auto(data, method="Banerjee14")
out3 = PreEst.auto(data, method="Lee17")
out4 = PreEst.auto(data, method="Yuan07")
## Visualize
par(mfrow=c(2,2))
image(pracma::flipud(out1$C), main="Banerjee06")
image(pracma::flipud(out2$C), main="Banerjee14")
image(pracma::flipud(out3$C), main="Lee14")
image(pracma::flipud(out4$C), main="Yuan07")
library(CovTools)
## generate data from multivariate normal with Identity precision.
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run estimation
out1 = PreEst(data, method="Banerjee06")
out2 = PreEst(data, method="Banerjee14")
out3 = PreEst(data, method="Lee17")
out4 = PreEst(data, method="Yuan07")
## Visualize
par(mfrow=c(2,2))
image(pracma::flipud(out1$C), main="Banerjee06")
image(pracma::flipud(out2$C), main="Banerjee14")
image(pracma::flipud(out3$C), main="Lee14")
image(pracma::flipud(out4$C), main="Yuan07")
par(mfrow=c(2,2))
image(pracma::flipud(out1), main="Banerjee06")
image(pracma::flipud(out2), main="Banerjee14")
image(pracma::flipud(out3), main="Lee14")
image(pracma::flipud(out4), main="Yuan07")
graphics.off()
par(mfrow=c(2,2))
image(pracma::flipud(out1), main="Banerjee06")
image(pracma::flipud(out2), main="Banerjee14")
image(pracma::flipud(out3), main="Lee14")
image(pracma::flipud(out4), main="Yuan07")
library(CovTools)
library(CovTools)
?`CovTools-package`
library(CovTools)
?`CovTools-package`
?`CovTools-package`
library(CovTools)
?`CovTools-package`
library(CovTools)
?`CovTools-package`
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
?globalVariables
globalVariables()
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
?makeCluster
??registerDoParallel
??makeCluster
library(CovTools)
library(CovTools)
?getRversion
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
data = mvtnorm::rmvnorm(100, sigma=diag(5))
## run automatic estimation
out1 = CovEst.auto(data, method="Bickel08")
out2 = CovEst.auto(data, method="Cai11")
out3 = CovEst.auto(data, method="Donoho95")
out4 = CovEst.auto(data, method="Fan13")
out5 = CovEst.auto(data, method="Qi06")
## Visualize
par(mfrow=c(2,3))
image(pracma::flipud(diag(10)),main="Original Covariance")
image(pracma::flipud(out1$S), main="Bickel08")
image(pracma::flipud(out2$S), main="Cai11")
image(pracma::flipud(out3$S), main="Donoho95")
image(pracma::flipud(out4$S), main="Fan13")
image(pracma::flipud(out5$S), main="Qi06")
rm(list=ls())
library(CovTools)
library(CovTools)
library(CovTools)
## generate data from multivariate normal with Identity precision.
data = mvtnorm::rmvnorm(100, sigma=diag(10))
## run estimation
out1 = PreEst.auto(data, method="Banerjee06")
out2 = PreEst.auto(data, method="Lee17")
## Visualize
par(mfrow=c(1,3))
image(pracma::flipud(diag(10)),main="Original Covariance")
image(pracma::flipud(out1$C), main="Banerjee06")
image(pracma::flipud(out2$C), main="Lee17")
?image
library(CovTools)
devtools::document()
library(CovTools)
install.packages("knitcitations")
library(CovTools)
library(CovTools)
browseVignettes("CovTools")
knit_with_parameters('~/Desktop/CovTools/vignettes/main.Rmd')
vignette("CovTools")
browseVignettes("CovTools")
install.packages("covmat")
require(covmat)
browseVignettes("covmat")
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
?CovEst.Bickel08
data <- mvtnorm::rmvnorm(100, sigma=diag(5))
## apply 4 different schemes
out1 <- CovEst.Bickel08(data, thr=0.1) # threshold value 0.1
out2 <- CovEst.Bickel08(data, thr=1)   # threshold value 1
out3 <- CovEst.Bickel08(data, thr=10)  # threshold value 10
out4 <- CovEst.Bickel08(data, CV=TRUE) # automatic threshold checking
## visualize 4 estimated matrices
par(mfrow=c(2,2))
image(pracma::flipud(out1$S), main="thr=0.1")
image(pracma::flipud(out2$S), main="thr=1")
image(pracma::flipud(out3$S), main="thr=10")
image(pracma::flipud(out4$S), main="automatic")
?col
?image
par(mfrow=c(2,2))
image(pracma::flipud(out1$S), col=gray((0:100)/100), main="thr=0.1")
image(pracma::flipud(out2$S), col=gray((0:100)/100), main="thr=1")
image(pracma::flipud(out3$S), col=gray((0:100)/100), main="thr=10")
image(pracma::flipud(out4$S), col=gray((0:100)/100), main="automatic")
par(mfrow=c(2,2), pty="s")
image(pracma::flipud(out1$S), col=gray((0:100)/100), main="thr=0.1")
image(pracma::flipud(out2$S), col=gray((0:100)/100), main="thr=1")
image(pracma::flipud(out3$S), col=gray((0:100)/100), main="thr=10")
image(pracma::flipud(out4$S), col=gray((0:100)/100), main="automatic")
out1$S
out4$CV
sort(1)
sort(rnorm(4))
library(CovTools)
data <- mvtnorm::rmvnorm(100, sigma=diag(5))
## apply 4 different schemes
mthr <- exp(seq(from=log(0.1),to=log(10),length.out=10))
out1 <- CovEst.Bickel08(data, thr=0.1) # threshold value 0.1
out2 <- CovEst.Bickel08(data, thr=1)   # threshold value 1
out3 <- CovEst.Bickel08(data, thr=10)  # threshold value 10
out4 <- CovEst.Bickel08(data, thr=mthr # automatic threshold checking
## visualize 4 estimated matrices
par(mfrow=c(2,2), pty="s")
data <- mvtnorm::rmvnorm(100, sigma=diag(5))
## apply 4 different schemes
#  mthr is a vector of regularization parameters to be tested
mthr <- exp(seq(from=log(0.1),to=log(10),length.out=10))
out1 <- CovEst.Bickel08(data, thr=0.1)  # threshold value 0.1
out2 <- CovEst.Bickel08(data, thr=1)    # threshold value 1
out3 <- CovEst.Bickel08(data, thr=10)   # threshold value 10
out4 <- CovEst.Bickel08(data, thr=mthr) # automatic threshold checking
## visualize 4 estimated matrices
par(mfrow=c(2,2), pty="s")
image(pracma::flipud(out1$S), col=gray((0:100)/100), main="thr=0.1")
image(pracma::flipud(out2$S), col=gray((0:100)/100), main="thr=1")
image(pracma::flipud(out3$S), col=gray((0:100)/100), main="thr=10")
image(pracma::flipud(out4$S), col=gray((0:100)/100), main="automatic")
out4$CV
out4 <- CovEst.Bickel08(data, thr=mthr, nCV=20) # automatic threshold checking
out4 <- CovEst.Bickel08(data, thr=mthr, parallel=FALSE) # automatic threshold checking
library(CovTools)
?CovEst.Bickel08
out4$CV$thr
mthr
library(CovTools)
library(CovTools)
library(CovTools)
data <- mvtnorm::rmvnorm(100, sigma=diag(5))
## apply 4 different schemes
#  mthr is a vector of regularization parameters to be tested
mthr <- exp(seq(from=log(0.01),to=log(0.99),length.out=10))
out1 <- CovEst.Cai11(data, thr=0.1)  # threshold value 0.1
out2 <- CovEst.Cai11(data, thr=0.5)  # threshold value 0.5
out3 <- CovEst.Cai11(data, thr=0.5)  # threshold value 0.9
out4 <- CovEst.Cai11(data, thr=mthr) # automatic threshold checking
## visualize 4 estimated matrices
par(mfrow=c(2,2), pty="s")
image(pracma::flipud(out1$S), col=gray((0:100)/100), main="thr=0.1")
image(pracma::flipud(out2$S), col=gray((0:100)/100), main="thr=0.5")
image(pracma::flipud(out3$S), col=gray((0:100)/100), main="thr=0.9")
image(pracma::flipud(out4$S), col=gray((0:100)/100), main="automatic")
out4$CV
mthr <- seq(from=0.01,to=0.99,length.out=10)
out1 <- CovEst.Cai11(data, thr=0.1)  # threshold value 0.1
out2 <- CovEst.Cai11(data, thr=0.5)  # threshold value 0.5
out3 <- CovEst.Cai11(data, thr=0.5)  # threshold value 0.9
out4 <- CovEst.Cai11(data, thr=mthr) # automatic threshold checking
## visualize 4 estimated matrices
par(mfrow=c(2,2), pty="s")
image(pracma::flipud(out1$S), col=gray((0:100)/100), main="thr=0.1")
image(pracma::flipud(out2$S), col=gray((0:100)/100), main="thr=0.5")
image(pracma::flipud(out3$S), col=gray((0:100)/100), main="thr=0.9")
image(pracma::flipud(out4$S), col=gray((0:100)/100), main="automatic")
out4$CV
library(CovTools)
?CovEst.Cai11
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
library(CovTools)
data <- mvtnorm::rmvnorm(100, sigma=diag(5))
## apply 4 different schemes
#  mthr is a vector of regularization parameters to be tested
mthr <- exp(seq(from=log(0.1),to=log(10),length.out=10))
out1 <- CovEst.Bickel08(data, thr=0.1, parallel=TRUE)  # threshold value 0.1
out2 <- CovEst.Bickel08(data, thr=1, parallel=TRUE)    # threshold value 1
out3 <- CovEst.Bickel08(data, thr=10, parallel=TRUE)   # threshold value 10
out4 <- CovEst.Bickel08(data, thr=mthr, parallel=TRUE) # automatic threshold checking
## visualize 4 estimated matrices
par(mfrow=c(2,2), pty="s")
image(pracma::flipud(out1$S), col=gray((0:100)/100), main="thr=0.1")
image(pracma::flipud(out2$S), col=gray((0:100)/100), main="thr=1")
image(pracma::flipud(out3$S), col=gray((0:100)/100), main="thr=10")
image(pracma::flipud(out4$S), col=gray((0:100)/100), main="automatic")
library(CovTools)
library(CovTools)
out4 <- CovEst.Bickel08(data, thr=mthr) # automatic threshold checking
out4 <- CovEst.Bickel08(data, thr=mthr, parallel=TRUE) # automatic threshold checking
out4
library(CovTools)
A = matrix(rnorm(100*6),nrow=100)
cov(A)
